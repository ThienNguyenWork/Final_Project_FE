//! Ki·ªÉm tra ƒëƒÉng nh·∫≠p & ph√¢n quy·ªÅn

// üõë Ki·ªÉm tra n·∫øu user ƒë√£ ƒëƒÉng nh·∫≠p
const user = JSON.parse(localStorage.getItem("user"));
// L·∫•y d·ªØ li·ªáu t·ª´ localStorage: Khi m·ªôt user ƒëƒÉng nh·∫≠p, 
// th√¥ng tin c·ªßa h·ªç(t√™n ƒëƒÉng nh·∫≠p, vai tr√≤, v.v.) ƒë∆∞·ª£c l∆∞u v√†o localStorage.
// D·ªØ li·ªáu trong localStorage l√† ki·ªÉu chu·ªói(string), 
// n√™n c·∫ßn d√πng JSON.parse() ƒë·ªÉ chuy·ªÉn ƒë·ªïi n√≥ th√†nh object trong JavaScript.
// Tr∆∞·ªõc khi JSON.parse():
// "{"username":"admin","role":"admin"}"
// Sau khi JSON.parse():
// { username: "admin", role: "admin" }

if (!user) {
    window.location.href = "login.html"; 
    // N·∫øu ch∆∞a ƒëƒÉng nh·∫≠p, chuy·ªÉn v·ªÅ trang login
    // if (!user): N·∫øu kh√¥ng c√≥ user trong localStorage, c√≥ nghƒ©a l√† ch∆∞a ƒëƒÉng nh·∫≠p.
    // Chuy·ªÉn h∆∞·ªõng (redirect) v·ªÅ login.html, y√™u c·∫ßu user ph·∫£i ƒëƒÉng nh·∫≠p.
} else {
    // üõë C·∫≠p nh·∫≠t th√¥ng tin tr√™n navbar
    document.getElementById("user-greeting").innerText = `Xin ch√†o, ${user.username}`;
    // T√¨m ph·∫ßn t·ª≠ HTML c√≥ id = "user-greeting".
    // G√°n n·ªôi dung m·ªõi: Hi·ªÉn th·ªã "Xin ch√†o, admin" ho·∫∑c "Xin ch√†o, user" t√πy theo user.username.
    
    // ·∫®n n√∫t login v√† hi·ªÉn th·ªã n√∫t logout
    document.getElementById("login-link").classList.add("hidden");
    document.getElementById("logout-btn").classList.remove("hidden");
    // ·∫®n n√∫t "Login" b·∫±ng c√°ch th√™m class "hidden" v√†o ph·∫ßn t·ª≠ c√≥ id="login-link".
    // Hi·ªán n√∫t "Logout" b·∫±ng c√°ch x√≥a class "hidden" kh·ªèi id = "logout-btn".
}

// Ban ƒë·∫ßu: C·∫£ Admin Panel v√† danh s√°ch s·∫£n ph·∫©m ƒë·ªÅu c√≥ s·∫µn trong HTML, 
// nh∆∞ng b·ªã ·∫©n(hidden).
// Khi ƒëƒÉng nh·∫≠p: D·ª±a v√†o role c·ªßa user, JavaScript hi·ªán ho·∫∑c ·∫©n khu v·ª±c ph√π h·ª£p.
// N·∫øu l√† Admin: Hi·ªán b·∫£ng qu·∫£n l√Ω s·∫£n ph·∫©m, ·∫©n danh s√°ch s·∫£n ph·∫©m.
// N·∫øu l√† User: Hi·ªán danh s√°ch s·∫£n ph·∫©m, ·∫©n b·∫£ng qu·∫£n l√Ω s·∫£n ph·∫©m.

// üõë Ki·ªÉm tra n·∫øu user l√† admin, ·∫©n danh s√°ch s·∫£n ph·∫©m, hi·ªÉn th·ªã b·∫£ng qu·∫£n l√Ω
if (user.role === "admin") {
    document.getElementById("admin-panel").classList.remove("hidden"); 
    // Hi·ªán b·∫£ng qu·∫£n l√Ω s·∫£n ph·∫©m
    // B·ªè class "hidden" ƒë·ªÉ hi·ªÉn th·ªã khu v·ª±c qu·∫£n l√Ω s·∫£n ph·∫©m.
    document.getElementById("product-list").classList.add("hidden"); 
    // ·∫®n danh s√°ch s·∫£n ph·∫©m
    // Th√™m class "hidden" v√†o product - list, l√†m cho danh s√°ch s·∫£n ph·∫©m b·ªã ·∫©n ƒëi.
} else {
    document.getElementById("product-list").classList.remove("hidden"); 
    // Hi·ªán danh s√°ch s·∫£n ph·∫©m cho User
    // N·∫øu user kh√¥ng ph·∫£i Admin, danh s√°ch s·∫£n ph·∫©m s·∫Ω hi·ªÉn th·ªã b√¨nh th∆∞·ªùng.
}


//! Load & Render danh s√°ch s·∫£n ph·∫©m

let allProducts = JSON.parse(localStorage.getItem("products")) || []; // L∆∞u danh s√°ch s·∫£n ph·∫©m g·ªëc

// Load d·ªØ li·ªáu t·ª´ products.json
async function loadProducts() {
    try {
        const response = await fetch('products.json');
        const { Popular } = await response.json();

        let storedProducts = JSON.parse(localStorage.getItem("products")) || [];

        // üîπ Ki·ªÉm tra v√† c·∫≠p nh·∫≠t d·ªØ li·ªáu m·ªõi v√†o localStorage
        if (storedProducts.length === 0) {
            localStorage.setItem("products", JSON.stringify(Popular));
            allProducts = Popular;
        } else {
            // üõë G·ªôp d·ªØ li·ªáu tr√°nh tr√πng l·∫∑p theo `nameProduct`
            let mergedProducts = [...new Map([...storedProducts, ...Popular].map(item => [item.nameProduct, item])).values()];
            localStorage.setItem("products", JSON.stringify(mergedProducts));
            allProducts = mergedProducts;
        }

        renderAdminProducts(); // C·∫≠p nh·∫≠t b·∫£ng qu·∫£n l√Ω s·∫£n ph·∫©m c·ªßa admin
    } catch (error) {
        console.error('L·ªói khi t·∫£i d·ªØ li·ªáu:', error);
    }
}

// üîπ Hi·ªÉn th·ªã danh s√°ch s·∫£n ph·∫©m c·ªßa Admin
function renderAdminProducts() {
    const productTable = document.getElementById("product-table");
    productTable.innerHTML = ""; 

    allProducts.forEach((product, index) => {
        productTable.innerHTML += `
            <tr class="bg-gray-800 text-white w-full max-w-full">
                <td class="p-4">${index + 1}</td>
                <td class="p-4">${product.nameProduct}</td>
                <td class="p-4">${product.releaseDate || 'N/A'}</td>
                <td class="p-4">${product.album || 'N/A'}</td>
                <td class="p-4">${product.time || 'N/A'}</td>
                <td class="p-4 flex gap-2">
                    <button onclick="editProduct(${index})" class="bg-yellow-500 text-white px-4 py-2 rounded-lg">S·ª≠a</button>
                    <button onclick="deleteProduct(${index})" class="bg-red-500 text-white px-4 py-2 rounded-lg">X√≥a</button>
                </td>
            </tr>
        `;
    });
}

// G·ªçi h√†m khi trang ƒë∆∞·ª£c load
window.onload = loadProducts;
